name: Go

on:
  push:
    branches: [ main ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Build
      run: |
        go build -v ./...
        
#     - name: Test
#       run: go test -v ./...        

    - name: Pack Linux
      if: runner.os != 'Windows'
      run: |
        tar czf FabricPing_linux_x64.tar.gz FabricPing

    - name: Upload a Build Artifact
      if: runner.os != 'Windows'
      uses: actions/upload-artifact@v2
      with:
        path: FabricPing_linux_x64.tar.gz

    - name: Pack Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Compress-Archive .\FabricPing.exe .\FabricPing_win_x64.zip

    - name: Upload a Build Artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v2
      with:
        path: FabricPing_win_x64.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      
    - uses: dotnet/nbgv@master
      with:
        setAllVars: true

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    
      run: |
        gh release create v$NBGV_NuGetPackageVersion artifact/*
    
